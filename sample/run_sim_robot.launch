<launch>
  <arg name="demo_base_dir" default="/userdir/"/>
  <!-- choreonoid -->
  <arg name="project_file" default="$(arg demo_base_dir)fullset_robot.cnoid"/>
  <arg name="robot_name" default="fullset_robot"/>
  <!-- ros_control -->
  <arg name="model" default="$(arg demo_base_dir)fullset_robot.urdf"/>
  <arg name="control_config" default="$(arg demo_base_dir)fullset_robot_roscontrol.yaml"/>
  <arg name="controllers" default="joint_controller wheel_controller joint_state_controller" />
  <!-- wheel -->
  <arg name="wheelconfigfile" default="$(arg demo_base_dir)fullset_robot_wheel.yaml"/>

  <include file="$(find irsl_choreonoid_ros)/launch/sim_robot.launch">
    <arg name="project_file" value="$(arg project_file)" />
    <arg name="robot_name" default="$(arg robot_name)"/>
    <arg name="model" value="$(arg model)" />
    <arg name="control_config" value="$(arg control_config)" />
    <arg name="controllers" value="$(arg controllers)" />
  </include>

  <group ns="$(arg robot_name)" >
    <node name="tof_converter_node" pkg="irsl_choreonoid_ros" type="tof_converter_node.py" output="screen">
      <remap from="input_points" to="TOFSensor/point_cloud"/>
      <remap from="output_sensor_data" to="TOFSensor/value"/>
    </node>

    <node name="colorsensor_converter_node" pkg="irsl_choreonoid_ros" type="colorsensor_converter_node.py" output="screen">
      <remap from="input_image" to="COLOR_Sensor1/image_raw"/>
      <remap from="output_sensor_data" to="COLOR_Sensor1/value"/>
    </node>

    <node name="wheelcontroller_node" pkg="irsl_choreonoid_ros" type="wheelcontroller.py" output="screen">
      <param name="wheelconfigfile" value="$(arg wheelconfigfile)" />
    </node>
  </group>
</launch>
